{"ast":null,"code":"var _jsxFileName = \"F:\\\\swathi\\\\RESUME_PROJECTS\\\\GraphQL-Node-React-eventapp\\\\frontend\\\\src\\\\pages\\\\Auth.js\";\nimport React, { Component } from 'react';\nimport './Auth.css';\n\nclass AuthPage extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isLogin: true\n    };\n\n    this.switchModeHandler = () => {\n      this.setState(prevState => {\n        return {\n          isLogin: !prevState.isLogin\n        };\n      });\n    };\n\n    this.submitHandler = event => {\n      event.preventDefault();\n      const email = this.emailEl.current.value;\n      const password = this.passwordEl.current.value;\n\n      if (email.trim().length === 0 || password.trim().length === 0) {\n        return;\n      }\n\n      let requestBody = {\n        query: `\n        query {\n          login(email: \"${email}\", password: \"${password}\") {\n            userId\n            token\n            tokenExpiration\n          }\n        }\n      `\n      };\n\n      if (!this.state.isLogin) {\n        requestBody = {\n          query: `\n          mutation {\n            createUser(userInput: {email: \"${email}\", password: \"${password}\"}) {\n              _id\n              email\n            }\n          }\n        `\n        };\n      }\n\n      fetch('http://localhost:8000/graphql', {\n        method: 'POST',\n        body: JSON.stringify(requestBody),\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      }).then(res => {\n        if (res.status !== 200 && res.status !== 201) {\n          throw new Error('Failed!');\n        }\n\n        return res.json();\n      }).then(resData => {\n        console.log(resData);\n      }).catch(err => {\n        console.log(err);\n      });\n    };\n\n    this.emailEl = React.createRef();\n    this.passwordEl = React.createRef();\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"form\", {\n      className: \"auth-form\",\n      onSubmit: this.submitHandler,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-control\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"email\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 21\n      }\n    }, \"E-Mail\"), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"email\",\n      id: \"email\",\n      ref: this.emailEl,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 21\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-control\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"password\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 21\n      }\n    }, \"Password\"), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"password\",\n      id: \"password\",\n      ref: this.passwordEl,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 21\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-actions\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      type: \"submit\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 21\n      }\n    }, \"Submit\"), /*#__PURE__*/React.createElement(\"button\", {\n      type: \"button\",\n      onClick: this.switchModeHandler,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 21\n      }\n    }, \"Switch to \", this.state.isLogin ? 'Signup' : 'Login')));\n  }\n\n}\n\nexport default AuthPage;","map":{"version":3,"sources":["F:/swathi/RESUME_PROJECTS/GraphQL-Node-React-eventapp/frontend/src/pages/Auth.js"],"names":["React","Component","AuthPage","constructor","props","state","isLogin","switchModeHandler","setState","prevState","submitHandler","event","preventDefault","email","emailEl","current","value","password","passwordEl","trim","length","requestBody","query","fetch","method","body","JSON","stringify","headers","then","res","status","Error","json","resData","console","log","catch","err","createRef","render"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\n\r\nimport './Auth.css';\r\n\r\nclass AuthPage extends Component {\r\n    state = {\r\n        isLogin: true\r\n    };\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.emailEl = React.createRef();\r\n        this.passwordEl = React.createRef();\r\n    }\r\n\r\n    switchModeHandler = () => {\r\n        this.setState(prevState => {\r\n            return { isLogin: !prevState.isLogin };\r\n        });\r\n    };\r\n\r\n    submitHandler = event => {\r\n        event.preventDefault();\r\n        const email = this.emailEl.current.value;\r\n        const password = this.passwordEl.current.value;\r\n\r\n        if (email.trim().length === 0 || password.trim().length === 0) {\r\n            return;\r\n        }\r\n\r\n        let requestBody = {\r\n            query: `\r\n        query {\r\n          login(email: \"${email}\", password: \"${password}\") {\r\n            userId\r\n            token\r\n            tokenExpiration\r\n          }\r\n        }\r\n      `\r\n        };\r\n\r\n        if (!this.state.isLogin) {\r\n            requestBody = {\r\n                query: `\r\n          mutation {\r\n            createUser(userInput: {email: \"${email}\", password: \"${password}\"}) {\r\n              _id\r\n              email\r\n            }\r\n          }\r\n        `\r\n            };\r\n        }\r\n\r\n        fetch('http://localhost:8000/graphql', {\r\n            method: 'POST',\r\n            body: JSON.stringify(requestBody),\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            }\r\n        })\r\n            .then(res => {\r\n                if (res.status !== 200 && res.status !== 201) {\r\n                    throw new Error('Failed!');\r\n                }\r\n                return res.json();\r\n            })\r\n            .then(resData => {\r\n                console.log(resData);\r\n            })\r\n            .catch(err => {\r\n                console.log(err);\r\n            });\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <form className=\"auth-form\" onSubmit={this.submitHandler}>\r\n                <div className=\"form-control\">\r\n                    <label htmlFor=\"email\">E-Mail</label>\r\n                    <input type=\"email\" id=\"email\" ref={this.emailEl} />\r\n                </div>\r\n                <div className=\"form-control\">\r\n                    <label htmlFor=\"password\">Password</label>\r\n                    <input type=\"password\" id=\"password\" ref={this.passwordEl} />\r\n                </div>\r\n                <div className=\"form-actions\">\r\n                    <button type=\"submit\">Submit</button>\r\n                    <button type=\"button\" onClick={this.switchModeHandler}>\r\n                        Switch to {this.state.isLogin ? 'Signup' : 'Login'}\r\n                    </button>\r\n                </div>\r\n            </form>\r\n        );\r\n    }\r\n}\r\n\r\nexport default AuthPage;"]},"metadata":{},"sourceType":"module"}