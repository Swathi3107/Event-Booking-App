{"ast":null,"code":"var _jsxFileName = \"F:\\\\swathi\\\\RESUME_PROJECTS\\\\GraphQL-Node-React-eventapp\\\\frontend\\\\src\\\\pages\\\\Bookings.js\";\nimport React, { Component } from 'react';\nimport Spinner from '../components/Spinner/Spinner';\nimport AuthContext from '../context/auth-context';\n\nclass BookingsPage extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      isLoading: false,\n      bookings: []\n    };\n\n    this.fetchBookings = () => {\n      this.setState({\n        isLoading: true\n      });\n      const requestBody = {\n        query: `\n          query {\n            bookings {\n              _id\n             createdAt\n             event {\n               _id\n               title\n               date\n             }\n            }\n          }\n        `\n      };\n      fetch('http://localhost:8000/graphql', {\n        method: 'POST',\n        body: JSON.stringify(requestBody),\n        headers: {\n          'Content-Type': 'application/json',\n          Authorization: 'Bearer ' + this.context.token\n        }\n      }).then(res => {\n        if (res.status !== 200 && res.status !== 201) {\n          throw new Error('Failed!');\n        }\n\n        return res.json();\n      }).then(resData => {\n        const bookings = resData.data.bookings;\n        this.setState({\n          bookings: bookings,\n          isLoading: false\n        });\n      }).catch(err => {\n        console.log(err);\n        this.setState({\n          isLoading: false\n        });\n      });\n    };\n  }\n\n  componentDidMount() {\n    this.fetchBookings();\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(React.Fragment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 13\n      }\n    }, this.state.isLoading ? /*#__PURE__*/React.createElement(Spinner, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 21\n      }\n    }) : /*#__PURE__*/React.createElement(\"ul\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 25\n      }\n    }, this.state.bookings.map(booking => /*#__PURE__*/React.createElement(\"li\", {\n      key: booking._id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 33\n      }\n    }, booking.event.title, \" -\", ' ', new Date(booking.createdAt).toLocaleDateString()))));\n  }\n\n}\n\nBookingsPage.contextType = AuthContext;\nexport default BookingsPage;","map":{"version":3,"sources":["F:/swathi/RESUME_PROJECTS/GraphQL-Node-React-eventapp/frontend/src/pages/Bookings.js"],"names":["React","Component","Spinner","AuthContext","BookingsPage","state","isLoading","bookings","fetchBookings","setState","requestBody","query","fetch","method","body","JSON","stringify","headers","Authorization","context","token","then","res","status","Error","json","resData","data","catch","err","console","log","componentDidMount","render","map","booking","_id","event","title","Date","createdAt","toLocaleDateString","contextType"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AAEA,OAAOC,OAAP,MAAoB,+BAApB;AACA,OAAOC,WAAP,MAAwB,yBAAxB;;AAEA,MAAMC,YAAN,SAA2BH,SAA3B,CAAqC;AAAA;AAAA;AAAA,SACjCI,KADiC,GACzB;AACJC,MAAAA,SAAS,EAAE,KADP;AAEJC,MAAAA,QAAQ,EAAE;AAFN,KADyB;;AAAA,SAYjCC,aAZiC,GAYjB,MAAM;AAClB,WAAKC,QAAL,CAAc;AAAEH,QAAAA,SAAS,EAAE;AAAb,OAAd;AACA,YAAMI,WAAW,GAAG;AAChBC,QAAAA,KAAK,EAAG;;;;;;;;;;;;;AADQ,OAApB;AAgBAC,MAAAA,KAAK,CAAC,+BAAD,EAAkC;AACnCC,QAAAA,MAAM,EAAE,MAD2B;AAEnCC,QAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeN,WAAf,CAF6B;AAGnCO,QAAAA,OAAO,EAAE;AACL,0BAAgB,kBADX;AAELC,UAAAA,aAAa,EAAE,YAAY,KAAKC,OAAL,CAAaC;AAFnC;AAH0B,OAAlC,CAAL,CAQKC,IARL,CAQUC,GAAG,IAAI;AACT,YAAIA,GAAG,CAACC,MAAJ,KAAe,GAAf,IAAsBD,GAAG,CAACC,MAAJ,KAAe,GAAzC,EAA8C;AAC1C,gBAAM,IAAIC,KAAJ,CAAU,SAAV,CAAN;AACH;;AACD,eAAOF,GAAG,CAACG,IAAJ,EAAP;AACH,OAbL,EAcKJ,IAdL,CAcUK,OAAO,IAAI;AACb,cAAMnB,QAAQ,GAAGmB,OAAO,CAACC,IAAR,CAAapB,QAA9B;AACA,aAAKE,QAAL,CAAc;AAAEF,UAAAA,QAAQ,EAAEA,QAAZ;AAAsBD,UAAAA,SAAS,EAAE;AAAjC,SAAd;AACH,OAjBL,EAkBKsB,KAlBL,CAkBWC,GAAG,IAAI;AACVC,QAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AACA,aAAKpB,QAAL,CAAc;AAAEH,UAAAA,SAAS,EAAE;AAAb,SAAd;AACH,OArBL;AAsBH,KApDgC;AAAA;;AAQjC0B,EAAAA,iBAAiB,GAAG;AAChB,SAAKxB,aAAL;AACH;;AA4CDyB,EAAAA,MAAM,GAAG;AACL,wBACI,oBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACK,KAAK5B,KAAL,CAAWC,SAAX,gBACG,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADH,gBAGO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACK,KAAKD,KAAL,CAAWE,QAAX,CAAoB2B,GAApB,CAAwBC,OAAO,iBAC5B;AAAI,MAAA,GAAG,EAAEA,OAAO,CAACC,GAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACKD,OAAO,CAACE,KAAR,CAAcC,KADnB,QAC4B,GAD5B,EAEK,IAAIC,IAAJ,CAASJ,OAAO,CAACK,SAAjB,EAA4BC,kBAA5B,EAFL,CADH,CADL,CAJZ,CADJ;AAgBH;;AAvEgC;;AAA/BrC,Y,CAMKsC,W,GAAcvC,W;AAoEzB,eAAeC,YAAf","sourcesContent":["import React, { Component } from 'react';\r\n\r\nimport Spinner from '../components/Spinner/Spinner';\r\nimport AuthContext from '../context/auth-context';\r\n\r\nclass BookingsPage extends Component {\r\n    state = {\r\n        isLoading: false,\r\n        bookings: []\r\n    };\r\n\r\n    static contextType = AuthContext;\r\n\r\n    componentDidMount() {\r\n        this.fetchBookings();\r\n    }\r\n\r\n    fetchBookings = () => {\r\n        this.setState({ isLoading: true });\r\n        const requestBody = {\r\n            query: `\r\n          query {\r\n            bookings {\r\n              _id\r\n             createdAt\r\n             event {\r\n               _id\r\n               title\r\n               date\r\n             }\r\n            }\r\n          }\r\n        `\r\n        };\r\n\r\n        fetch('http://localhost:8000/graphql', {\r\n            method: 'POST',\r\n            body: JSON.stringify(requestBody),\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                Authorization: 'Bearer ' + this.context.token\r\n            }\r\n        })\r\n            .then(res => {\r\n                if (res.status !== 200 && res.status !== 201) {\r\n                    throw new Error('Failed!');\r\n                }\r\n                return res.json();\r\n            })\r\n            .then(resData => {\r\n                const bookings = resData.data.bookings;\r\n                this.setState({ bookings: bookings, isLoading: false });\r\n            })\r\n            .catch(err => {\r\n                console.log(err);\r\n                this.setState({ isLoading: false });\r\n            });\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <React.Fragment>\r\n                {this.state.isLoading ? (\r\n                    <Spinner />\r\n                ) : (\r\n                        <ul>\r\n                            {this.state.bookings.map(booking => (\r\n                                <li key={booking._id}>\r\n                                    {booking.event.title} -{' '}\r\n                                    {new Date(booking.createdAt).toLocaleDateString()}\r\n                                </li>\r\n                            ))}\r\n                        </ul>\r\n                    )}\r\n            </React.Fragment>\r\n        );\r\n    }\r\n}\r\n\r\nexport default BookingsPage;"]},"metadata":{},"sourceType":"module"}