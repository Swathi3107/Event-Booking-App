{"ast":null,"code":"var React = require('react');\n\nvar createReactClass = require('create-react-class');\n\nvar ReactDOM = require('react-dom');\n\nmodule.exports = {\n  createClass: function (chartType, methodNames, dataKey) {\n    var excludedProps = ['data', 'options', 'redraw'];\n    var classData = {\n      displayName: chartType + 'Chart',\n      getInitialState: function () {\n        return {};\n      },\n      render: function () {\n        var _props = {\n          ref: 'canvass'\n        };\n\n        for (var name in this.props) {\n          if (this.props.hasOwnProperty(name)) {\n            if (excludedProps.indexOf(name) === -1) {\n              _props[name] = this.props[name];\n            }\n          }\n        }\n\n        return React.createElement('canvas', _props);\n      }\n    };\n    var extras = ['clear', 'stop', 'resize', 'toBase64Image', 'generateLegend', 'update', 'addData', 'removeData'];\n\n    function extra(type) {\n      classData[type] = function () {\n        return this.state.chart[type].apply(this.state.chart, arguments);\n      };\n    }\n\n    classData.componentDidMount = function () {\n      this.initializeChart(this.props);\n    };\n\n    classData.componentWillUnmount = function () {\n      var chart = this.state.chart;\n      chart.destroy();\n    };\n\n    classData.componentWillReceiveProps = function (nextProps) {\n      var chart = this.state.chart;\n\n      if (nextProps.redraw) {\n        chart.destroy();\n        this.initializeChart(nextProps);\n      } else {\n        dataKey = dataKey || dataKeys[chart.name];\n        updatePoints(nextProps, chart, dataKey);\n\n        if (chart.scale) {\n          chart.scale.xLabels = nextProps.data.labels;\n\n          if (chart.scale.calculateXLabelRotation) {\n            chart.scale.calculateXLabelRotation();\n          }\n        }\n\n        chart.update();\n      }\n    };\n\n    classData.initializeChart = function (nextProps) {\n      var Chart = require('chart.js');\n\n      var el = ReactDOM.findDOMNode(this);\n      var ctx = el.getContext(\"2d\");\n      var chart = new Chart(ctx)[chartType](nextProps.data, nextProps.options || {});\n      this.state.chart = chart;\n    }; // return the chartjs instance\n\n\n    classData.getChart = function () {\n      return this.state.chart;\n    }; // return the canvass element that contains the chart\n\n\n    classData.getCanvass = function () {\n      return this.refs.canvass;\n    };\n\n    classData.getCanvas = classData.getCanvass;\n    var i;\n\n    for (i = 0; i < extras.length; i++) {\n      extra(extras[i]);\n    }\n\n    for (i = 0; i < methodNames.length; i++) {\n      extra(methodNames[i]);\n    }\n\n    return createReactClass(classData);\n  }\n};\nvar dataKeys = {\n  'Line': 'points',\n  'Radar': 'points',\n  'Bar': 'bars'\n};\n\nvar updatePoints = function (nextProps, chart, dataKey) {\n  var name = chart.name;\n\n  if (name === 'PolarArea' || name === 'Pie' || name === 'Doughnut') {\n    nextProps.data.forEach(function (segment, segmentIndex) {\n      if (!chart.segments[segmentIndex]) {\n        chart.addData(segment);\n      } else {\n        Object.keys(segment).forEach(function (key) {\n          chart.segments[segmentIndex][key] = segment[key];\n        });\n      }\n    });\n\n    while (nextProps.data.length < chart.segments.length) {\n      chart.removeData();\n    }\n  } else if (name === \"Radar\") {\n    chart.removeData();\n    nextProps.data.datasets.forEach(function (set, setIndex) {\n      set.data.forEach(function (val, pointIndex) {\n        if (typeof chart.datasets[setIndex][dataKey][pointIndex] == \"undefined\") {\n          addData(nextProps, chart, setIndex, pointIndex);\n        } else {\n          chart.datasets[setIndex][dataKey][pointIndex].value = val;\n        }\n      });\n    });\n  } else {\n    while (chart.scale.xLabels.length > nextProps.data.labels.length) {\n      chart.removeData();\n    }\n\n    nextProps.data.datasets.forEach(function (set, setIndex) {\n      set.data.forEach(function (val, pointIndex) {\n        if (typeof chart.datasets[setIndex][dataKey][pointIndex] == \"undefined\") {\n          addData(nextProps, chart, setIndex, pointIndex);\n        } else {\n          chart.datasets[setIndex][dataKey][pointIndex].value = val;\n        }\n      });\n    });\n  }\n};\n\nvar addData = function (nextProps, chart, setIndex, pointIndex) {\n  var values = [];\n  nextProps.data.datasets.forEach(function (set) {\n    values.push(set.data[pointIndex]);\n  });\n  chart.addData(values, nextProps.data.labels[setIndex]);\n};","map":{"version":3,"sources":["F:/swathi/RESUME_PROJECTS/GraphQL-Node-React-eventapp/frontend/node_modules/react-chartjs/lib/core.js"],"names":["React","require","createReactClass","ReactDOM","module","exports","createClass","chartType","methodNames","dataKey","excludedProps","classData","displayName","getInitialState","render","_props","ref","name","props","hasOwnProperty","indexOf","createElement","extras","extra","type","state","chart","apply","arguments","componentDidMount","initializeChart","componentWillUnmount","destroy","componentWillReceiveProps","nextProps","redraw","dataKeys","updatePoints","scale","xLabels","data","labels","calculateXLabelRotation","update","Chart","el","findDOMNode","ctx","getContext","options","getChart","getCanvass","refs","canvass","getCanvas","i","length","forEach","segment","segmentIndex","segments","addData","Object","keys","key","removeData","datasets","set","setIndex","val","pointIndex","value","values","push"],"mappings":"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","sourcesContent":["var React = require('react');\nvar createReactClass = require('create-react-class');\nvar ReactDOM = require('react-dom');\n\nmodule.exports = {\n    createClass: function(chartType, methodNames, dataKey) {\n        var excludedProps = ['data', 'options', 'redraw'];\n        var classData = {\n            displayName: chartType + 'Chart',\n            getInitialState: function() { return {}; },\n            render: function() {\n                var _props = {\n                    ref: 'canvass'\n                };\n                for (var name in this.props) {\n                    if (this.props.hasOwnProperty(name)) {\n                        if (excludedProps.indexOf(name) === -1) {\n                            _props[name] = this.props[name];\n                        }\n                    }\n                }\n                return React.createElement('canvas', _props);\n            }\n        };\n\n        var extras = ['clear', 'stop', 'resize', 'toBase64Image', 'generateLegend', 'update', 'addData', 'removeData'];\n        function extra(type) {\n            classData[type] = function() {\n                return this.state.chart[type].apply(this.state.chart, arguments);\n            };\n        }\n\n        classData.componentDidMount = function() {\n            this.initializeChart(this.props);\n        };\n\n        classData.componentWillUnmount = function() {\n            var chart = this.state.chart;\n            chart.destroy();\n        };\n\n        classData.componentWillReceiveProps = function(nextProps) {\n            var chart = this.state.chart;\n            if (nextProps.redraw) {\n                chart.destroy();\n                this.initializeChart(nextProps);\n            } else {\n                dataKey = dataKey || dataKeys[chart.name];\n                updatePoints(nextProps, chart, dataKey);\n                if (chart.scale) {\n                    chart.scale.xLabels = nextProps.data.labels;\n\n                    if (chart.scale.calculateXLabelRotation){\n                        chart.scale.calculateXLabelRotation();\n                    }\n                }\n                chart.update();\n            }\n        };\n\n        classData.initializeChart = function(nextProps) {\n            var Chart = require('chart.js');\n            var el = ReactDOM.findDOMNode(this);\n            var ctx = el.getContext(\"2d\");\n            var chart = new Chart(ctx)[chartType](nextProps.data, nextProps.options || {});\n            this.state.chart = chart;\n        };\n\n        // return the chartjs instance\n        classData.getChart = function() {\n            return this.state.chart;\n        };\n\n        // return the canvass element that contains the chart\n        classData.getCanvass = function() {\n            return this.refs.canvass;\n        };\n\n        classData.getCanvas = classData.getCanvass;\n\n        var i;\n        for (i=0; i<extras.length; i++) {\n            extra(extras[i]);\n        }\n        for (i=0; i<methodNames.length; i++) {\n            extra(methodNames[i]);\n        }\n\n        return createReactClass(classData);\n    }\n};\n\nvar dataKeys = {\n    'Line': 'points',\n    'Radar': 'points',\n    'Bar': 'bars'\n};\n\nvar updatePoints = function(nextProps, chart, dataKey) {\n    var name = chart.name;\n\n    if (name === 'PolarArea' || name === 'Pie' || name === 'Doughnut') {\n        nextProps.data.forEach(function(segment, segmentIndex) {\n            if (!chart.segments[segmentIndex]) {\n                chart.addData(segment);\n            } else {\n                Object.keys(segment).forEach(function (key) {\n                    chart.segments[segmentIndex][key] = segment[key];\n                });\n            }\n        });\n\n        while(nextProps.data.length < chart.segments.length) {\n            chart.removeData();\n        }\n    } else if (name === \"Radar\") {\n        chart.removeData();\n        nextProps.data.datasets.forEach(function(set, setIndex) {\n            set.data.forEach(function(val, pointIndex) {\n                if (typeof(chart.datasets[setIndex][dataKey][pointIndex]) == \"undefined\") {\n                    addData(nextProps, chart, setIndex, pointIndex);\n                } else {\n                    chart.datasets[setIndex][dataKey][pointIndex].value = val;\n                }\n            });\n        });\n    } else {\n        while (chart.scale.xLabels.length > nextProps.data.labels.length) {\n            chart.removeData();\n        }\n        nextProps.data.datasets.forEach(function(set, setIndex) {\n            set.data.forEach(function(val, pointIndex) {\n                if (typeof(chart.datasets[setIndex][dataKey][pointIndex]) == \"undefined\") {\n                    addData(nextProps, chart, setIndex, pointIndex);\n                } else {\n                    chart.datasets[setIndex][dataKey][pointIndex].value = val;\n                }\n            });\n        });\n    }\n};\n\nvar addData = function(nextProps, chart, setIndex, pointIndex) {\n    var values = [];\n    nextProps.data.datasets.forEach(function(set) {\n        values.push(set.data[pointIndex]);\n    });\n    chart.addData(values, nextProps.data.labels[setIndex]);\n};\n"]},"metadata":{},"sourceType":"script"}