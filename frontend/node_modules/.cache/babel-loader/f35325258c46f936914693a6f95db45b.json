{"ast":null,"code":"var _jsxFileName = \"F:\\\\swathi\\\\RESUME_PROJECTS\\\\GraphQL-Node-React-eventapp\\\\frontend\\\\src\\\\components\\\\Bookings\\\\BookingsChart\\\\BookingsChart.js\";\nimport React from 'react';\nimport { Bar as BarChart } from 'react-chartjs';\nconst BOOKINGS_BUCKETS = {\n  Cheap: {\n    min: 0,\n    max: 300\n  },\n  Normal: {\n    min: 300,\n    max: 700\n  },\n  Expensive: {\n    min: 700,\n    max: 10000000\n  }\n};\n\nconst bookingsChart = props => {\n  const chartData = {\n    labels: [],\n    datasets: []\n  };\n  let values = [];\n\n  for (const bucket in BOOKINGS_BUCKETS) {\n    const filteredBookingsCount = props.bookings.reduce((prev, current) => {\n      if (current.event.price > BOOKINGS_BUCKETS[bucket].min && current.event.price < BOOKINGS_BUCKETS[bucket].max) {\n        return prev + 1;\n      } else {\n        return prev;\n      }\n    }, 0);\n    values.push(filteredBookingsCount);\n    chartData.labels.push(bucket);\n    chartData.datasets.push({\n      // label: \"My First dataset\",\n      fillColor: 'rgba(220,220,220,0.5)',\n      strokeColor: 'rgba(220,220,220,0.8)',\n      highlightFill: 'rgba(220,220,220,0.75)',\n      highlightStroke: 'rgba(220,220,220,1)',\n      data: values\n    });\n    values = [...values];\n    values[values.length - 1] = 0;\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      textAlign: 'center'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(BarChart, {\n    data: chartData,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }\n  }));\n};\n\nexport default bookingsChart;","map":{"version":3,"sources":["F:/swathi/RESUME_PROJECTS/GraphQL-Node-React-eventapp/frontend/src/components/Bookings/BookingsChart/BookingsChart.js"],"names":["React","Bar","BarChart","BOOKINGS_BUCKETS","Cheap","min","max","Normal","Expensive","bookingsChart","props","chartData","labels","datasets","values","bucket","filteredBookingsCount","bookings","reduce","prev","current","event","price","push","fillColor","strokeColor","highlightFill","highlightStroke","data","length","textAlign"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,GAAG,IAAIC,QAAhB,QAAgC,eAAhC;AAEA,MAAMC,gBAAgB,GAAG;AACrBC,EAAAA,KAAK,EAAE;AACHC,IAAAA,GAAG,EAAE,CADF;AAEHC,IAAAA,GAAG,EAAE;AAFF,GADc;AAKrBC,EAAAA,MAAM,EAAE;AACJF,IAAAA,GAAG,EAAE,GADD;AAEJC,IAAAA,GAAG,EAAE;AAFD,GALa;AASrBE,EAAAA,SAAS,EAAE;AACPH,IAAAA,GAAG,EAAE,GADE;AAEPC,IAAAA,GAAG,EAAE;AAFE;AATU,CAAzB;;AAeA,MAAMG,aAAa,GAAGC,KAAK,IAAI;AAC3B,QAAMC,SAAS,GAAG;AAAEC,IAAAA,MAAM,EAAE,EAAV;AAAcC,IAAAA,QAAQ,EAAE;AAAxB,GAAlB;AACA,MAAIC,MAAM,GAAG,EAAb;;AACA,OAAK,MAAMC,MAAX,IAAqBZ,gBAArB,EAAuC;AACnC,UAAMa,qBAAqB,GAAGN,KAAK,CAACO,QAAN,CAAeC,MAAf,CAAsB,CAACC,IAAD,EAAOC,OAAP,KAAmB;AACnE,UACIA,OAAO,CAACC,KAAR,CAAcC,KAAd,GAAsBnB,gBAAgB,CAACY,MAAD,CAAhB,CAAyBV,GAA/C,IACAe,OAAO,CAACC,KAAR,CAAcC,KAAd,GAAsBnB,gBAAgB,CAACY,MAAD,CAAhB,CAAyBT,GAFnD,EAGE;AACE,eAAOa,IAAI,GAAG,CAAd;AACH,OALD,MAKO;AACH,eAAOA,IAAP;AACH;AACJ,KAT6B,EAS3B,CAT2B,CAA9B;AAUAL,IAAAA,MAAM,CAACS,IAAP,CAAYP,qBAAZ;AACAL,IAAAA,SAAS,CAACC,MAAV,CAAiBW,IAAjB,CAAsBR,MAAtB;AACAJ,IAAAA,SAAS,CAACE,QAAV,CAAmBU,IAAnB,CAAwB;AACpB;AACAC,MAAAA,SAAS,EAAE,uBAFS;AAGpBC,MAAAA,WAAW,EAAE,uBAHO;AAIpBC,MAAAA,aAAa,EAAE,wBAJK;AAKpBC,MAAAA,eAAe,EAAE,qBALG;AAMpBC,MAAAA,IAAI,EAAEd;AANc,KAAxB;AAQAA,IAAAA,MAAM,GAAG,CAAC,GAAGA,MAAJ,CAAT;AACAA,IAAAA,MAAM,CAACA,MAAM,CAACe,MAAP,GAAgB,CAAjB,CAAN,GAA4B,CAA5B;AACH;;AAED,sBACI;AAAK,IAAA,KAAK,EAAE;AAAEC,MAAAA,SAAS,EAAE;AAAb,KAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,QAAD;AAAU,IAAA,IAAI,EAAEnB,SAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CADJ;AAKH,CAjCD;;AAmCA,eAAeF,aAAf","sourcesContent":["import React from 'react';\r\nimport { Bar as BarChart } from 'react-chartjs';\r\n\r\nconst BOOKINGS_BUCKETS = {\r\n    Cheap: {\r\n        min: 0,\r\n        max: 300\r\n    },\r\n    Normal: {\r\n        min: 300,\r\n        max: 700\r\n    },\r\n    Expensive: {\r\n        min: 700,\r\n        max: 10000000\r\n    }\r\n};\r\n\r\nconst bookingsChart = props => {\r\n    const chartData = { labels: [], datasets: [] };\r\n    let values = [];\r\n    for (const bucket in BOOKINGS_BUCKETS) {\r\n        const filteredBookingsCount = props.bookings.reduce((prev, current) => {\r\n            if (\r\n                current.event.price > BOOKINGS_BUCKETS[bucket].min &&\r\n                current.event.price < BOOKINGS_BUCKETS[bucket].max\r\n            ) {\r\n                return prev + 1;\r\n            } else {\r\n                return prev;\r\n            }\r\n        }, 0);\r\n        values.push(filteredBookingsCount);\r\n        chartData.labels.push(bucket);\r\n        chartData.datasets.push({\r\n            // label: \"My First dataset\",\r\n            fillColor: 'rgba(220,220,220,0.5)',\r\n            strokeColor: 'rgba(220,220,220,0.8)',\r\n            highlightFill: 'rgba(220,220,220,0.75)',\r\n            highlightStroke: 'rgba(220,220,220,1)',\r\n            data: values\r\n        });\r\n        values = [...values];\r\n        values[values.length - 1] = 0;\r\n    }\r\n\r\n    return (\r\n        <div style={{ textAlign: 'center' }}>\r\n            <BarChart data={chartData} />\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default bookingsChart;"]},"metadata":{},"sourceType":"module"}